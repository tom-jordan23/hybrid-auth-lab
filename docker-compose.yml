services:
  # Keycloak Server with PostgreSQL database
  keycloak-db:
    image: postgres:15
    container_name: keycloak-db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    networks:
      - hybrid-auth-network
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak-server
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_PROXY: edge
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
    ports:
      - "0.0.0.0:8080:8080"
      - "0.0.0.0:8443:8443"
    volumes:
      - ./keycloak-server/config:/opt/keycloak/conf/custom:ro
      - ./keycloak-server/themes:/opt/keycloak/themes/custom:ro
      - ./keycloak-server/config/import:/opt/keycloak/data/import:ro
      - keycloak_data:/opt/keycloak/data
    networks:
      - hybrid-auth-network
    depends_on:
      - keycloak-db
    command: start-dev
    restart: unless-stopped

  # Ubuntu SSHD Server (Linux client)
  ubuntu-sshd:
    build:
      context: ./linux-client
      dockerfile: Dockerfile
    container_name: ubuntu-sshd-client
    environment:
      ROOT_PASSWORD: SecureRoot123!
      USER_PASSWORD: SecureUser123!
    ports:
      - "0.0.0.0:2222:22"  # SSH access from any network interface
    volumes:
      - ./linux-client/config:/etc/ssh/custom:ro
      - ./linux-client/config:/opt/config:rw
      - ubuntu_home:/home/vagrant
      - ubuntu_etc:/etc/persistent
    networks:
      - hybrid-auth-network
    restart: unless-stopped

  # Network bridge for communication with QEMU Windows server
  network-bridge:
    image: alpine:latest
    container_name: network-bridge
    command: tail -f /dev/null
    networks:
      - hybrid-auth-network
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

volumes:
  keycloak_db_data:
  keycloak_data:
  ubuntu_home:
  ubuntu_etc:

networks:
  hybrid-auth-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
